// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –ë—ç–∫–µ–Ω–¥ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
const backend = {
    creatorId: 6595683709, // –í–∞—à Telegram ID
    promoCodes: [],
    buttons: {
        dailyBonus: "–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–û–ù–£–°",
        getGift: "–ü–û–õ–£–ß–ò–¢–¨ –ü–û–î–ê–†–û–ö",
        community: "–°–û–û–ë–©–ï–°–¢–í–û",
        download: "–°–ö–ê–ß–ê–¢–¨ –ò–ì–†–£",
        adminPanel: "–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨",
        topUsers: "–¢–û–ü –ò–ì–†–û–ö–û–í",
        enterPromo: "–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –ü–†–û–ú–û–ö–û–î"
    },
    links: {
        site: "https://gtech-mobile.com",
        download: "https://gtech-mobile.com/download",
        forum: "https://forum.gtech-mobile.com",
        vkGroup: "https://vk.com/gtech_mobile",
        vkChat: "https://vk.me/join/gtech_chat"
    },
    bonuses: [10, 20, 30, 40, 50, 60, 70, 80, 100],
    users: {},
    admins: []
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
    user: {
        id: tg.initDataUnsafe?.user?.id || 0,
        name: tg.initDataUnsafe?.user?.first_name || '–ì–æ—Å—Ç—å',
        balance: 0,
        lastBonusDate: null,
        claimedBonuses: []
    },
    currentPage: 'main',
    isAdmin: tg.initDataUnsafe?.user?.id === backend.creatorId || backend.admins.includes(tg.initDataUnsafe?.user?.id)
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
function loadData() {
    const savedData = localStorage.getItem('gtech_backend');
    if (savedData) Object.assign(backend, JSON.parse(savedData));
    
    if (!backend.users[state.user.id]) {
        backend.users[state.user.id] = {
            balance: 0,
            lastBonusDate: null,
            claimedBonuses: []
        };
    }
    Object.assign(state.user, backend.users[state.user.id]);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
    state.isAdmin = tg.initDataUnsafe?.user?.id === backend.creatorId || 
                    backend.admins.includes(tg.initDataUnsafe?.user?.id);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveData() {
    backend.users[state.user.id] = {
        balance: state.user.balance,
        lastBonusDate: state.user.lastBonusDate,
        claimedBonuses: state.user.claimedBonuses
    };
    localStorage.setItem('gtech_backend', JSON.stringify(backend));
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, isError = false) {
    const notification = document.createElement('div');
    notification.className = `notification ${isError ? 'error' : ''}`;
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
function navigateTo(page) {
    state.currentPage = page;
    render();
    window.scrollTo(0, 0);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞
function claimBonus() {
    const now = new Date();
    const mskTime = new Date(now.getTime() + (now.getTimezoneOffset() * 60000) + (3 * 3600000));
    
    if (state.user.lastBonusDate) {
        const lastDate = new Date(state.user.lastBonusDate);
        const lastMsk = new Date(lastDate.getTime() + (lastDate.getTimezoneOffset() * 60000) + (3 * 3600000));
        
        if (mskTime.getDate() === lastMsk.getDate()) {
            showNotification('–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è!', true);
            return;
        }
    }
    
    const nextBonus = state.user.claimedBonuses.length + 1;
    if (nextBonus > backend.bonuses.length) {
        showNotification('–í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ –±–æ–Ω—É—Å—ã!', true);
        return;
    }
    
    const bonusAmount = backend.bonuses[nextBonus - 1];
    state.user.balance += bonusAmount;
    state.user.claimedBonuses.push(nextBonus);
    state.user.lastBonusDate = new Date().toISOString();
    
    showNotification(`–ë–æ–Ω—É—Å –∑–∞ ${nextBonus} –¥–µ–Ω—å: +${bonusAmount} –º–æ–Ω–µ—Ç!`);
    saveData();
    render();
}

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
function activatePromoCode() {
    const code = document.getElementById('promo-input').value;
    if (!code) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥!', true);
        return;
    }
    
    const promo = backend.promoCodes.find(p => p.code === code);
    if (!promo) {
        showNotification('–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!', true);
        return;
    }
    
    if (promo.activations <= 0) {
        showNotification('–ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!', true);
        return;
    }
    
    if (promo.usedBy && promo.usedBy.includes(state.user.id)) {
        showNotification('–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥!', true);
        return;
    }
    
    state.user.balance += promo.amount;
    promo.activations -= 1;
    
    if (!promo.usedBy) promo.usedBy = [];
    promo.usedBy.push(state.user.id);
    
    showNotification(`–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! +${promo.amount} –º–æ–Ω–µ—Ç`);
    saveData();
    render();
}

// –ê–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–∏
function updateButtonTexts() {
    backend.buttons.dailyBonus = document.getElementById('btn-daily-bonus').value;
    backend.buttons.getGift = document.getElementById('btn-get-gift').value;
    backend.buttons.community = document.getElementById('btn-community').value;
    backend.buttons.download = document.getElementById('btn-download').value;
    saveData();
    showNotification('–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    navigateTo('main');
}

function updateLinks() {
    backend.links.site = document.getElementById('link-site').value;
    backend.links.download = document.getElementById('link-download').value;
    backend.links.forum = document.getElementById('link-forum').value;
    backend.links.vkGroup = document.getElementById('link-vk-group').value;
    backend.links.vkChat = document.getElementById('link-vk-chat').value;
    saveData();
    showNotification('–°—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
}

function addPromoCode() {
    const code = document.getElementById('promo-code').value;
    const amount = parseInt(document.getElementById('promo-amount').value);
    const activations = parseInt(document.getElementById('promo-activations').value);
    
    if (!code || isNaN(amount) {
        showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', true);
        return;
    }
    
    backend.promoCodes.push({ 
        code, 
        amount,
        activations: activations || 1,
        usedBy: []
    });
    saveData();
    showNotification(`–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –Ω–∞ ${amount} –º–æ–Ω–µ—Ç —Å–æ–∑–¥–∞–Ω!`);
}

function addAdmin() {
    const adminId = parseInt(document.getElementById('admin-id').value);
    if (isNaN(adminId)) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID!', true);
        return;
    }
    
    if (backend.admins.includes(adminId)) {
        showNotification('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω!', true);
        return;
    }
    
    backend.admins.push(adminId);
    saveData();
    showNotification('–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω!');
}

function removeAdmin() {
    const adminId = parseInt(document.getElementById('admin-id').value);
    if (isNaN(adminId)) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID!', true);
        return;
    }
    
    const index = backend.admins.indexOf(adminId);
    if (index === -1) {
        showNotification('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω!', true);
        return;
    }
    
    backend.admins.splice(index, 1);
    saveData();
    showNotification('–ê–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω!');
}

// –†–µ–Ω–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü
const pages = {
    main: `
        <div class="page">
            <div class="header">
                <h1>Gtech Mobile</h1>
            </div>
            
            ${state.isAdmin ? `
                <div class="admin-panel">
                    <button class="btn btn-secondary" onclick="navigateTo('admin')">
                        ${backend.buttons.adminPanel}
                    </button>
                </div>
            ` : ''}
            
            <div class="user-card">
                <div class="user-name">${state.user.name}</div>
                <div class="balance-container">
                    <div class="balance-value">${state.user.balance}</div>
                    <div class="balance-label">–ú–û–ù–ï–¢</div>
                </div>
            </div>
            
            <div class="buttons-container">
                <button class="btn btn-primary" onclick="navigateTo('bonus')">
                    ${backend.buttons.getGift}
                </button>
                
                <button class="btn btn-secondary" onclick="navigateTo('promo')">
                    ${backend.buttons.enterPromo}
                </button>
                
                <button class="btn btn-vk" onclick="navigateTo('top')">
                    ${backend.buttons.topUsers}
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">${backend.buttons.dailyBonus}</h3>
                <div class="bonus-grid">
                    ${backend.bonuses.map((amount, day) => `
                        <div class="bonus-day ${state.user.claimedBonuses.includes(day + 1) ? 'active' : ''}">
                            ${day + 1} –î–ï–ù–¨
                            <div class="bonus-day-value">${amount}</div>
                        </div>
                    `).join('')}
                </div>
            </div>
            
            <div class="card">
                <h3 class="card-title">${backend.buttons.community}</h3>
                <div class="grid">
                    <div class="grid-item" onclick="navigateTo('community')">
                        <div class="grid-item-icon">üë•</div>
                        –§–û–†–£–ú –ò –ß–ê–¢–´
                    </div>
                    <div class="grid-item" onclick="window.open('${backend.links.download}', '_blank')">
                        <div class="grid-item-icon">‚¨áÔ∏è</div>
                        ${backend.buttons.download}
                    </div>
                </div>
            </div>
        </div>
    `,
    
    admin: `
        <div class="page">
            <button class="btn btn-secondary" onclick="navigateTo('main')">‚Üê –ù–∞–∑–∞–¥</button>
            <h2 class="card-title">–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</h2>
            
            <div class="card">
                <h3 class="card-title">–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫</h3>
                <input type="text" class="input-field" id="btn-daily-bonus" placeholder="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å" value="${backend.buttons.dailyBonus}">
                <input type="text" class="input-field" id="btn-get-gift" placeholder="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫" value="${backend.buttons.getGift}">
                <input type="text" class="input-field" id="btn-community" placeholder="–°–æ–æ–±—â–µ—Å—Ç–≤–æ" value="${backend.buttons.community}">
                <input type="text" class="input-field" id="btn-download" placeholder="–°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É" value="${backend.buttons.download}">
                <button class="btn btn-primary" onclick="updateButtonTexts()">
                    –û–ë–ù–û–í–ò–¢–¨ –¢–ï–ö–°–¢ –ö–ù–û–ü–û–ö
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–°—Å—ã–ª–∫–∏</h3>
                <input type="text" class="input-field" id="link-site" placeholder="–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç" value="${backend.links.site}">
                <input type="text" class="input-field" id="link-download" placeholder="–°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É" value="${backend.links.download}">
                <input type="text" class="input-field" id="link-forum" placeholder="–§–æ—Ä—É–º" value="${backend.links.forum}">
                <input type="text" class="input-field" id="link-vk-group" placeholder="–ì—Ä—É–ø–ø–∞ –í–ö" value="${backend.links.vkGroup}">
                <input type="text" class="input-field" id="link-vk-chat" placeholder="–ß–∞—Ç –í–ö" value="${backend.links.vkChat}">
                <button class="btn btn-secondary" onclick="updateLinks()">
                    –û–ë–ù–û–í–ò–¢–¨ –°–°–´–õ–ö–ò
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</h3>
                <input type="text" class="input-field" id="promo-code" placeholder="–ü—Ä–æ–º–æ–∫–æ–¥">
                <input type="number" class="input-field" id="promo-amount" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç">
                <input type="number" class="input-field" id="promo-activations" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π" value="1">
                <button class="btn btn-primary" onclick="addPromoCode()">
                    –°–û–ó–î–ê–¢–¨ –ü–†–û–ú–û–ö–û–î
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏</h3>
                <input type="number" class="input-field" id="admin-id" placeholder="Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                <div class="grid">
                    <button class="btn btn-primary" onclick="addAdmin()">
                        –î–û–ë–ê–í–ò–¢–¨ –ê–î–ú–ò–ù–ê
                    </button>
                    <button class="btn btn-secondary" onclick="removeAdmin()">
                        –£–î–ê–õ–ò–¢–¨ –ê–î–ú–ò–ù–ê
                    </button>
                </div>
            </div>
        </div>
    `,
    
    bonus: `
        <div class="page">
            <button class="btn btn-secondary" onclick="navigateTo('main')">‚Üê –ù–∞–∑–∞–¥</button>
            <h2 class="card-title">${backend.buttons.dailyBonus}</h2>
            <div class="card">
                <button class="btn btn-primary" onclick="claimBonus()">
                    ${backend.buttons.getGift}
                </button>
            </div>
        </div>
    `,
    
    promo: `
        <div class="page">
            <button class="btn btn-secondary" onclick="navigateTo('main')">‚Üê –ù–∞–∑–∞–¥</button>
            <h2 class="card-title">–ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–†–û–ú–û–ö–û–î–ê</h2>
            <div class="card">
                <input type="text" class="input-field" id="promo-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥">
                <button class="btn btn-primary" onclick="activatePromoCode()">
                    –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨
                </button>
            </div>
        </div>
    `,
    
    top: `
        <div class="page">
            <button class="btn btn-secondary" onclick="navigateTo('main')">‚Üê –ù–∞–∑–∞–¥</button>
            <h2 class="card-title">–¢–û–ü –ò–ì–†–û–ö–û–í</h2>
            <div class="card">
                <div class="top-list">
                    ${Object.entries(backend.users)
                        .sort((a, b) => b[1].balance - a[1].balance)
                        .slice(0, 10)
                        .map(([id, user], index) => `
                            <div class="top-item ${id === state.user.id.toString() ? 'current-user' : ''}">
                                <span class="top-position">${index + 1}</span>
                                <span class="top-name">${user.name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${id}`}</span>
                                <span class="top-balance">${user.balance} –º–æ–Ω–µ—Ç</span>
                            </div>
                        `).join('')}
                </div>
            </div>
        </div>
    `,
    
    community: `
        <div class="page">
            <button class="btn btn-secondary" onclick="navigateTo('main')">‚Üê –ù–∞–∑–∞–¥</button>
            <h2 class="card-title">–°–û–û–ë–©–ï–°–¢–í–û</h2>
            
            <div class="card">
                <h3 class="card-title">–û–§–ò–¶–ò–ê–õ–¨–ù–´–ï –†–ï–°–£–†–°–´</h3>
                <div class="grid">
                    <div class="grid-item" onclick="window.open('${backend.links.site}', '_blank')">
                        <div class="grid-item-icon site">üåê</div>
                        –û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –°–ê–ô–¢
                    </div>
                    <div class="grid-item" onclick="window.open('${backend.links.forum}', '_blank')">
                        <div class="grid-item-icon forum">üí¨</div>
                        –§–û–†–£–ú
                    </div>
                    <div class="grid-item" onclick="window.open('${backend.links.vkChat}', '_blank')">
                        <div class="grid-item-icon vk">üîµ</div>
                        –ß–ê–¢ –í–ö–û–ù–¢–ê–ö–¢–ï
                    </div>
                    <div class="grid-item" onclick="window.open('${backend.links.vkGroup}', '_blank')">
                        <div class="grid-item-icon vk">üë•</div>
                        –ì–†–£–ü–ü–ê –í–ö–û–ù–¢–ê–ö–¢–ï
                    </div>
                </div>
            </div>
        </div>
    `
};

// –†–µ–Ω–¥–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function render() {
    const app = document.getElementById('app');
    app.innerHTML = pages[state.currentPage] || pages.main;
    saveData();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    loadData();
    render();
    tg.ready();
    
    tg.onEvent('viewportChanged', () => tg.expand());
}

initApp();