// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const config = {
    creatorId: 6595683709, // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞
    links: {
        game: 'https://example.com/game',
        chat: 'https://t.me/gtech_chat',
        channel: 'https://t.me/gtech_channel'
    },
    bonuses: {
        days: [5, 10, 15, 20, 25, 30, 35, 40, 50],
        resetHour: 3 // 3:00 –ú–°–ö
    }
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
    user: {
        id: tg.initDataUnsafe?.user?.id || 0,
        name: tg.initDataUnsafe?.user?.first_name || '–ì–æ—Å—Ç—å',
        lastName: tg.initDataUnsafe?.user?.last_name || '',
        username: tg.initDataUnsafe?.user?.username ? `@${tg.initDataUnsafe.user.username}` : '',
        photoUrl: tg.initDataUnsafe?.user?.photo_url || '',
        balance: 0,
        tickets: 0,
        registered: new Date().toISOString().split('T')[0],
        likes: 0,
        comments: 0,
        vkLinked: false,
        lastBonusDate: null,
        claimedBonuses: []
    },
    currentPage: 'main',
    promoCode: '',
    activeShopTab: 'auction',
    isAdmin: tg.initDataUnsafe?.user?.id === config.creatorId
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
function loadState() {
    const savedState = localStorage.getItem('gtech_state');
    if (savedState) {
        const parsed = JSON.parse(savedState);
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±—Ä–æ—Å–∞ –±–æ–Ω—É—Å–æ–≤ –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
        const now = new Date();
        const mskTime = new Date(now.getTime() + (now.getTimezoneOffset() * 60000) + (3 * 3600000));
        
        if (parsed.user.lastBonusDate) {
            const lastDate = new Date(parsed.user.lastBonusDate);
            const lastMsk = new Date(lastDate.getTime() + (lastDate.getTimezoneOffset() * 60000) + (3 * 3600000));
            
            // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å –≤ –ú–°–ö, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã
            if (mskTime.getDate() !== lastMsk.getDate() || 
                mskTime.getMonth() !== lastMsk.getMonth() || 
                mskTime.getFullYear() !== lastMsk.getFullYear()) {
                parsed.user.claimedBonuses = [];
            }
        }
        
        Object.assign(state, parsed);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
function saveState() {
    localStorage.setItem('gtech_state', JSON.stringify(state));
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    loadState();
    render();
    tg.ready();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    tg.onEvent('viewportChanged', function() {
        tg.expand();
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, isError = false) {
    const notification = document.createElement('div');
    notification.className = `notification ${isError ? 'error' : ''}`;
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –†–µ–Ω–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü
const pages = {
    main: `
        <div class="page">
            <div class="header">
                <h1>Gtech Mobile</h1>
            </div>
            
            ${state.isAdmin ? `
                <div class="admin-panel">
                    <h3 class="admin-title">üëë –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</h3>
                    <button class="btn btn-secondary" onclick="navigateTo('admin')">
                        –û–¢–ö–†–´–¢–¨ –ê–î–ú–ò–ù–ö–£
                    </button>
                </div>
            ` : ''}
            
            <div class="user-card">
                ${state.user.photoUrl ? `
                    <img src="${state.user.photoUrl}" class="user-avatar" alt="–ê–≤–∞—Ç–∞—Ä">
                ` : `<div class="user-avatar">üë§</div>`}
                
                <div class="user-name">
                    ${state.user.name} ${state.user.lastName}
                </div>
                
                ${state.user.username ? `
                    <div class="user-username">${state.user.username}</div>
                ` : ''}
                
                <div class="balance">
                    <div class="balance-item">
                        <div class="balance-value">${state.user.balance}</div>
                        <div class="balance-label">–ë–ê–õ–ê–ù–°</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value">${state.user.tickets}</div>
                        <div class="balance-label">–ë–ò–õ–ï–¢–û–í</div>
                    </div>
                </div>
            </div>
            
            <button class="btn btn-primary" onclick="navigateTo('download')">
                –°–ö–ê–ß–ê–¢–¨ –ò–ì–†–£
            </button>
            
            <button class="btn btn-secondary" onclick="navigateTo('gift')">
                –ü–û–õ–£–ß–ò–¢–¨ –ü–û–î–ê–†–û–ö
            </button>
            
            <div class="card">
                <h3 class="card-title">–¢–û–ü –ê–ö–¢–ò–í–ù–´–• –ò–ì–†–û–ö–û–í</h3>
                <button class="btn btn-primary" onclick="navigateTo('shop')">
                    –ú–ê–ì–ê–ó–ò–ù –ò–ì–†–û–í–´–• –¢–û–í–ê–†–û–í
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–ë–û–ù–£–°–ù–´–ï –ú–û–ù–ï–¢–´</h3>
                <div class="grid">
                    <div class="grid-item" onclick="navigateTo('storage')">
                        <div class="grid-item-icon">üì¶</div>
                        –•–†–ê–ù–ò–õ–ò–©–ï
                    </div>
                    <div class="grid-item" onclick="navigateTo('promo')">
                        <div class="grid-item-icon">üéüÔ∏è</div>
                        –ü–†–û–ú–û–ö–û–î
                    </div>
                    <div class="grid-item" onclick="navigateTo('bonus')">
                        <div class="grid-item-icon">üéÅ</div>
                        –ë–û–ù–£–°–´
                    </div>
                    <div class="grid-item" onclick="navigateTo('settings')">
                        <div class="grid-item-icon">‚öôÔ∏è</div>
                        –ù–ê–°–¢–†–û–ô–ö–ò
                    </div>
                </div>
            </div>
        </div>
    `,
    
    admin: `
        <div class="page">
            <a class="back-btn" onclick="navigateTo('main')">
                ‚Üê –ù–∞–∑–∞–¥
            </a>
            
            <h2 class="card-title">üëë –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</h2>
            
            <div class="card">
                <h3 class="card-title">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</h3>
                <input type="text" class="input-field" id="promo-code" placeholder="–ü—Ä–æ–º–æ–∫–æ–¥">
                <input type="number" class="input-field" id="promo-amount" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç">
                <button class="btn btn-primary" onclick="addPromoCode()">
                    –°–û–ó–î–ê–¢–¨ –ü–†–û–ú–û–ö–û–î
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫–∏</h3>
                <input type="text" class="input-field" id="link-game" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É" value="${config.links.game}">
                <input type="text" class="input-field" id="link-chat" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç" value="${config.links.chat}">
                <input type="text" class="input-field" id="link-channel" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª" value="${config.links.channel}">
                <button class="btn btn-secondary" onclick="updateLinks()">
                    –û–ë–ù–û–í–ò–¢–¨ –°–°–´–õ–ö–ò
                </button>
            </div>
            
            <div class="card">
                <h3 class="card-title">–í—ã–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã</h3>
                <input type="number" class="input-field" id="user-id" placeholder="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                <input type="number" class="input-field" id="coins-amount" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç">
                <button class="btn btn-primary" onclick="addCoinsToUser()">
                    –í–´–î–ê–¢–¨ –ú–û–ù–ï–¢–´
                </button>
            </div>
        </div>
    `,
    
    bonus: `
        <div class="page">
            <a class="back-btn" onclick="navigateTo('main')">
                ‚Üê –ù–∞–∑–∞–¥
            </a>
            
            <h2 class="card-title">–ë–û–ù–£–°–ù–´–ï –ú–û–ù–ï–¢–´</h2>
            
            <div class="card">
                <p>–ó–∞—Ö–æ–¥–∏—Ç–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –∑–∞–±–∏—Ä–∞–π—Ç–µ –±–æ–Ω—É—Å—ã.</p>
                
                <h3 class="card-title">–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–û–ù–£–°</h3>
                <p><strong>–ó–ê –ü–û–î–ü–ò–°–ö–£</strong></p>
                
                <button class="btn btn-secondary" onclick="claimBonus()">
                    –ó–ê–ë–†–ê–¢–¨ –ë–û–ù–£–°
                </button>
                
                <div class="bonus-grid">
                    ${config.bonuses.days.map((amount, index) => {
                        const day = index + 1;
                        return `
                            <div class="bonus-day ${state.user.claimedBonuses.includes(day) ? 'active' : ''}">
                                ${day} –î–ï–ù–¨
                                <div class="bonus-day-value">${amount}</div>
                            </div>
                        `;
                    }).join('')}
                </div>
            </div>
        </div>
    `,
    
    download: `
        <div class="page">
            <a class="back-btn" onclick="navigateTo('main')">
                ‚Üê –ù–∞–∑–∞–¥
            </a>
            
            <h2 class="card-title">–°–ö–ê–ß–ê–¢–¨ –ò–ì–†–£</h2>
            
            <div class="card">
                <p>–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:</p>
                
                <div class="grid">
                    <div class="grid-item" onclick="window.open('${config.links.game}', '_blank')">
                        <div class="grid-item-icon">‚¨áÔ∏è</div>
                        –û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –°–ê–ô–¢
                    </div>
                    <div class="grid-item" onclick="window.open('${config.links.chat}', '_blank')">
                        <div class="grid-item-icon">üí¨</div>
                        –ß–ê–¢ –ü–û–î–î–ï–†–ñ–ö–ò
                    </div>
                </div>
            </div>
        </div>
    `,
    
    promo: `
        <div class="page">
            <a class="back-btn" onclick="navigateTo('main')">
                ‚Üê –ù–∞–∑–∞–¥
            </a>
            
            <h2 class="card-title">–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –ü–†–û–ú–û–ö–û–î</h2>
            
            <div class="card">
                <input type="text" class="input-field" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥" value="${state.promoCode}" oninput="state.promoCode = this.value">
                <button class="btn btn-primary" onclick="applyPromoCode()">
                    –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨
                </button>
            </div>
        </div>
    `,
    
    settings: `
        <div class="page">
            <a class="back-btn" onclick="navigateTo('main')">
                ‚Üê –ù–∞–∑–∞–¥
            </a>
            
            <h2 class="card-title">–ù–ê–°–¢–†–û–ô–ö–ò</h2>
            
            <div class="card">
                <table style="width: 100%;">
                    <tr>
                        <td>–ò–≥—Ä–æ–≤–æ–π ID:</td>
                        <td>${state.user.id}</td>
                    </tr>
                    <tr>
                        <td>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</td>
                        <td>${state.user.registered}</td>
                    </tr>
                </table>
            </div>
            
            <div class="card">
                <h3 class="card-title">–ü–†–ò–í–Ø–ó–ê–¢–¨ –í–ö</h3>
                <button class="btn ${state.user.vkLinked ? 'btn-secondary' : 'btn-primary'}" onclick="${state.user.vkLinked ? 'unlinkVK()' : 'linkVK()'}">
                    ${state.user.vkLinked ? '–û–¢–í–Ø–ó–ê–¢–¨' : '–ü–†–ò–í–Ø–ó–ê–¢–¨'}
                </button>
            </div>
        </div>
    `
};

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
function navigateTo(page) {
    state.currentPage = page;
    render();
    window.scrollTo(0, 0);
}

// –†–µ–Ω–¥–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function render() {
    const app = document.getElementById('app');
    app.innerHTML = pages[state.currentPage] || pages.main;
    saveState();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞
function claimBonus() {
    const now = new Date();
    const mskTime = new Date(now.getTime() + (now.getTimezoneOffset() * 60000) + (3 * 3600000));
    const today = mskTime.getDate();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è
    if (state.user.lastBonusDate) {
        const lastDate = new Date(state.user.lastBonusDate);
        const lastMsk = new Date(lastDate.getTime() + (lastDate.getTimezoneOffset() * 60000) + (3 * 3600000));
        
        if (mskTime.getDate() === lastMsk.getDate() && 
            mskTime.getMonth() === lastMsk.getMonth() && 
            mskTime.getFullYear() === lastMsk.getFullYear()) {
            showNotification('–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è!', true);
            return;
        }
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å
    const nextBonus = state.user.claimedBonuses.length > 0 
        ? Math.max(...state.user.claimedBonuses) + 1 
        : 1;
    
    if (nextBonus > config.bonuses.days.length) {
        showNotification('–í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ –±–æ–Ω—É—Å—ã!', true);
        return;
    }
    
    // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å
    const bonusAmount = config.bonuses.days[nextBonus - 1];
    state.user.balance += bonusAmount;
    state.user.claimedBonuses.push(nextBonus);
    state.user.lastBonusDate = new Date().toISOString();
    
    showNotification(`–ë–æ–Ω—É—Å –∑–∞ ${nextBonus} –¥–µ–Ω—å –ø–æ–ª—É—á–µ–Ω! +${bonusAmount} –º–æ–Ω–µ—Ç`);
    render();
}

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
function applyPromoCode() {
    if (!state.promoCode) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥!', true);
        return;
    }
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    // –î–ª—è –¥–µ–º–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º 100 –º–æ–Ω–µ—Ç
    state.user.balance += 100;
    showNotification('–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! +100 –º–æ–Ω–µ—Ç');
    state.promoCode = '';
    render();
}

// –ê–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–∏
function addPromoCode() {
    const code = document.getElementById('promo-code').value;
    const amount = parseInt(document.getElementById('promo-amount').value);
    
    if (!code || isNaN(amount)) {
        showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', true);
        return;
    }
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    showNotification(`–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –Ω–∞ ${amount} –º–æ–Ω–µ—Ç —Å–æ–∑–¥–∞–Ω!`);
}

function updateLinks() {
    config.links.game = document.getElementById('link-game').value;
    config.links.chat = document.getElementById('link-chat').value;
    config.links.channel = document.getElementById('link-channel').value;
    
    showNotification('–°—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
}

function addCoinsToUser() {
    const userId = parseInt(document.getElementById('user-id').value);
    const amount = parseInt(document.getElementById('coins-amount').value);
    
    if (isNaN(userId) || isNaN(amount)) {
        showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', true);
        return;
    }
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤—ã–¥–∞—á–∏ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    showNotification(`–í—ã–¥–∞–Ω–æ ${amount} –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
}

// –ü—Ä–∏–≤—è–∑–∫–∞ –í–ö
function linkVK() {
    state.user.vkLinked = true;
    showNotification('–ê–∫–∫–∞—É–Ω—Ç –í–ö –ø—Ä–∏–≤—è–∑–∞–Ω!');
    render();
}

function unlinkVK() {
    state.user.vkLinked = false;
    showNotification('–ê–∫–∫–∞—É–Ω—Ç –í–ö –æ—Ç–≤—è–∑–∞–Ω!');
    render();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
initApp();